{"version":3,"sources":["managers/collision.ts"],"names":[],"mappings":"AAAA,IAAO,QAAQ,CA4Dd;AA5DD,WAAO,QAAQ,EAAC,CAAC;IACb,0BAA0B;IAC1B;QAGI,mBAAY,MAAsB;YAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAC1B,CAAC;QAEM,4BAAQ,GAAf,UAAgB,UAA0B,EAAE,QAAwB;YAChE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QACvG,CAAC;QAEM,yBAAK,GAAZ,UAAa,MAA0B;YACnC,IAAI,UAAU,GAAmB,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;YACtD,IAAI,QAAQ,GAAmB,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;YACpD,IAAI,gBAAgB,GAAW,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC;YACzD,IAAI,gBAAgB,GAAW,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;YACnD,IAAI,eAAe,GAAW,gBAAgB,GAAG,gBAAgB,CAAC;YAElE,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC9B,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAE9B,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC;YACvC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC;YAGvC;mEACuD;YACvD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC;gBACxD,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;oBACtB,8BAA8B;oBAC9B,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;wBAC3B,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAC3B,UAAU,IAAI,GAAG,CAAC,CAAC,kBAAkB;oBACzC,CAAC;oBAED,4BAA4B;oBAC5B,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;wBAC1B,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBAC/B,UAAU,EAAE,CAAC,CAAC,cAAc;wBAC5B,oCAAoC;wBACpC,EAAE,CAAA,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC;4BACjB,yBAAyB;4BACzB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;4BAChC,4BAA4B;4BAC5B,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;4BACzB,WAAW,EAAE,CAAC;wBAClB,CAAC;oBAEL,CAAC;oBACD,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC9B,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;YAC/B,CAAC;QAGL,CAAC;QACL,gBAAC;IAAD,CAzDA,AAyDC,IAAA;IAzDY,kBAAS,YAyDrB,CAAA;AACL,CAAC,EA5DM,QAAQ,KAAR,QAAQ,QA4Dd","file":"managers/collision.js","sourcesContent":["module managers {\n    // COLLISION MANAGER CLASS\n    export class Collision {\n        // PRIVATE INSTANCE VARIABLES\n        private _player: objects.Player;\n        constructor(player: objects.Player) {\n            this._player = player;\n        }\n\n        public distance(startPoint: createjs.Point, endPoint: createjs.Point): number {\n            return Math.sqrt(Math.pow((endPoint.x - startPoint.x), 2) + Math.pow(endPoint.y - startPoint.y, 2))\n        }\n\n        public check(object: objects.GameObject) {\n            var startPoint: createjs.Point = new createjs.Point();\n            var endPoint: createjs.Point = new createjs.Point();\n            var playerHalfHeight: number = this._player.height * 0.5;\n            var objectHalfHeight: number = object.height * 0.5;\n            var minimumDistance: number = playerHalfHeight + objectHalfHeight;\n\n            startPoint.x = this._player.x;\n            startPoint.y = this._player.y;\n\n            endPoint.x = object.centerX + object.x;\n            endPoint.y = object.centerY + object.y;\n\n\n            /* check if the distance between the player and \n              the other object is less than the minimum distance */\n            if (this.distance(startPoint, endPoint) < minimumDistance) {\n                if (!object.isColliding) {\n                    // check if it's an island hit\n                    if (object.name === \"island\") {\n                        createjs.Sound.play(\"yay\");\n                        scoreValue += 100; //award 100 points\n                    }\n\n                    // check if it's a cloud hit\n                    if (object.name === \"cloud\") {\n                        createjs.Sound.play(\"thunder\");\n                        livesValue--; // lose a life\n                        // check if player has no more lives\n                        if(livesValue <= 0) {\n                            // turn off player engine\n                            this._player.engineSound.stop();\n                            // show the Game Over Screen\n                            scene = config.Scene.END;\n                            changeScene();\n                        }\n                        \n                    }\n                    object.isColliding = true;\n                }\n            } else {\n                object.isColliding = false;\n            }\n            \n            \n        }\n    }\n}"],"sourceRoot":"/source/"}