{"version":3,"sources":["managers/collision.ts"],"names":[],"mappings":"AAAA,IAAO,QAAQ,CAoEd;AApED,WAAO,QAAQ,EAAC,CAAC;IACb,0BAA0B;IAC1B;QAGI,mBAAY,MAAsB;YAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAC1B,CAAC;QAEM,4BAAQ,GAAf,UAAgB,UAA0B,EAAE,QAAwB;YAChE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QACvG,CAAC;QAEM,yBAAK,GAAZ,UAAa,MAA0B;YACnC,IAAI,UAAU,GAAmB,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;YACtD,IAAI,QAAQ,GAAmB,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;YACpD,IAAI,gBAAgB,GAAW,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC;YACzD,IAAI,gBAAgB,GAAW,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;YACnD,IAAI,eAAe,GAAW,gBAAgB,GAAG,gBAAgB,CAAC;YAElE,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC9B,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAE9B,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC;YACvC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC;YAGvC;mEACuD;YACvD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC;gBACxD,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;oBACtB,8BAA8B;oBAC9B,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;wBAC3B,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBAC5B,WAAW,IAAI,CAAC,CAAC,CAAC,wCAAwC;oBAC9D,CAAC;oBAED,6BAA6B;oBAC7B,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;wBAC1B,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC7B,UAAU,IAAI,CAAC,CAAC,CAAC,eAAe;oBACpC,CAAC;oBAED,2BAA2B;oBAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;wBACxB,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC7B,QAAQ,IAAI,CAAC,CAAC,CAAC,aAAa;oBAChC,CAAC;oBAED,4BAA4B;oBAC5B,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;wBAC1B,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBAC9B,WAAW,EAAE,CAAC,CAAC,gBAAgB;wBAC/B,oCAAoC;wBACpC,EAAE,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,CAAC;4BACnB,WAAW,GAAG,CAAC,CAAC;wBACpB,CAAC;oBAEL,CAAC;oBACD,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC9B,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;YAC/B,CAAC;QAGL,CAAC;QACL,gBAAC;IAAD,CAjEA,AAiEC,IAAA;IAjEY,kBAAS,YAiErB,CAAA;AACL,CAAC,EApEM,QAAQ,KAAR,QAAQ,QAoEd;AAED,qBAAqB;AACrB,oCAAoC;AACZ,yBAAyB;AACzB,gCAAgC;AAChC,uCAAuC;AACvC,mCAAmC;AACnC,gCAAgC;AAChC,qBAAqB;AACrB,IAAI","file":"managers/collision.js","sourcesContent":["module managers {\r\n    // COLLISION MANAGER CLASS\r\n    export class Collision {\r\n        // PRIVATE INSTANCE VARIABLES\r\n        private _player: objects.Player;\r\n        constructor(player: objects.Player) {\r\n            this._player = player;\r\n        }\r\n\r\n        public distance(startPoint: createjs.Point, endPoint: createjs.Point): number {\r\n            return Math.sqrt(Math.pow((endPoint.x - startPoint.x), 2) + Math.pow(endPoint.y - startPoint.y, 2))\r\n        }\r\n\r\n        public check(object: objects.GameObject) {\r\n            var startPoint: createjs.Point = new createjs.Point();\r\n            var endPoint: createjs.Point = new createjs.Point();\r\n            var playerHalfHeight: number = this._player.height * 0.5;\r\n            var objectHalfHeight: number = object.height * 0.5;\r\n            var minimumDistance: number = playerHalfHeight + objectHalfHeight;\r\n\r\n            startPoint.x = this._player.x;\r\n            startPoint.y = this._player.y;\r\n\r\n            endPoint.x = object.centerX + object.x;\r\n            endPoint.y = object.centerY + object.y;\r\n\r\n\r\n            /* check if the distance between the player and \r\n              the other object is less than the minimum distance */\r\n            if (this.distance(startPoint, endPoint) < minimumDistance) {\r\n                if (!object.isColliding) {\r\n                    // check if it's an cheese hit\r\n                    if (object.name === \"cheese\") {\r\n                        createjs.Sound.play(\"snap\");\r\n                        cheeseValue += 1; //award 1 cheese                        \r\n                    }\r\n                    \r\n                    // check if it's an bread hit\r\n                    if (object.name === \"bread\") {\r\n                        createjs.Sound.play(\"toast\");\r\n                        breadValue += 1; //award 1 bread\r\n                    }\r\n                    \r\n                    // check if it's an egg hit\r\n                    if (object.name === \"egg\") {\r\n                        createjs.Sound.play(\"crack\");\r\n                        eggValue += 1; //award 1 egg\r\n                    }\r\n\r\n                    // check if it's a mouse hit\r\n                    if (object.name === \"mouse\") {\r\n                        createjs.Sound.play(\"squeak\");\r\n                        cheeseValue--; // lose a cheese\r\n                        // check if player has no more lives\r\n                        if (cheeseValue <= 0) {\r\n                            cheeseValue = 0;\r\n                        }\r\n\r\n                    }\r\n                    object.isColliding = true;\r\n                }\r\n            } else {\r\n                object.isColliding = false;\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n}\r\n\r\n//Game over mechanism\r\n// check if player has no more lives\r\n                        // if (livesValue <= 0) {\r\n                        //     // turn off player engine\r\n                        //     this._player.engineSound.stop();\r\n                        //     // show the Game Over Screen\r\n                        //     scene = config.Scene.END;\r\n                        //     changeScene();\r\n                        // }"],"sourceRoot":"/source/"}