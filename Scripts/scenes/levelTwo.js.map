{"version":3,"sources":["scenes/levelTwo.ts"],"names":[],"mappings":"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","file":"scenes/levelTwo.js","sourcesContent":["// Level Two SCENE\r\nmodule scenes {\r\n    export class levelTwo extends objects.Scene {\r\n        //PRIVATE INSTANCE VARIABLES ++++++++++++\r\n        private _kitchenTwo: objects.KitchenTwo;\r\n        private _steak: objects.Steak;\r\n        private _steakCount: number;\r\n        private _sauce: objects.Sauce;\r\n        private _sauceCount: number;\r\n        private _fries: objects.Fries;\r\n        private _friesCount: number;\r\n        private _peppers: objects.Pepper[];\r\n        private _pepper: objects.Pepper;\r\n        private _pepperCount: number;\r\n        private _player: objects.Player;\r\n        private _collision: managers.Collision;\r\n        private _liveLabel: objects.Label;\r\n        private _steakLabel: objects.Label;\r\n        private _sauceLabel: objects.Label;\r\n        private _friesLabel: objects.Label;\r\n        private _timer: number;\r\n        private _liveValue: number = 100;\r\n      \r\n\r\n        // CONSTRUCTOR ++++++++++++++++++++++\r\n        constructor() {\r\n            super();\r\n\r\n        }\r\n\r\n        // PRIVATE METHODS\r\n\r\n        /**\r\n         * @method _updateScore\r\n         * @return void\r\n         */\r\n        private _updateScore(): void {\r\n            this._liveLabel.text = \"Lives: \" + this._liveValue;\r\n            this._steakLabel.text = \"Steak: \" + steakValue + \"/3\";\r\n            this._sauceLabel.text = \"Sauce: \" + sauceValue + \"/4\";\r\n            this._friesLabel.text = \"Fries: \" + friesValue + \"/6\";\r\n        }\r\n\r\n        // PUBLIC METHODS +++++++++++++++++++++\r\n\r\n        // Start Method\r\n        public start(): void {\r\n            // Set Bread Count\r\n            this._steakCount = 1;\r\n\r\n            // Set Egg Count\r\n            this._friesCount = 1;\r\n\r\n            // Set Mouse Count\r\n            this._pepperCount = 4;\r\n\r\n\r\n            steakValue = 0;\r\n            friesValue = 0;\r\n            sauceValue = 0;\r\n            this._timer = 30 * 60; //3 Seconds\r\n\r\n\r\n            // Instantiate Pepper array\r\n            this._peppers = new Array<objects.Pepper>();\r\n\r\n            // added kitchen to the scene\r\n            this._kitchenTwo = new objects.KitchenTwo();\r\n            this.addChild(this._kitchenTwo);\r\n\r\n            // added player to the scene\r\n            this._player = new objects.Player();\r\n            this.addChild(this._player);\r\n\r\n            // added cheese to the scene\r\n            this._steak = new objects.Steak();\r\n            this.addChild(this._steak);\r\n\r\n            this._fries = new objects.Fries();\r\n            this.addChild(this._fries);\r\n\r\n            this._sauce = new objects.Sauce();\r\n            this.addChild(this._sauce);\r\n            \r\n\r\n            //added mouse to the scene\r\n            for (var pepper: number = 0; pepper < this._pepperCount; pepper++) {\r\n                this._peppers[pepper] = new objects.Pepper();\r\n                this.addChild(this._peppers[pepper]);\r\n            }\r\n\r\n            //added LivesLabel to the scene\r\n            this._liveLabel = new objects.Label(\r\n                \"Lives: \" + this._liveValue,\r\n                \"25px Consolas\",\r\n                \"#000000\",\r\n                10, 10, false\r\n            );\r\n            this.addChild(this._liveLabel);\r\n\r\n            //added BreadLabel to the scene\r\n            this._steakLabel = new objects.Label(\r\n                \"Steak: \" + steakValue + \"/3\",\r\n                \"25px Consolas\",\r\n                \"#000000\",\r\n                490, 10, false\r\n            );\r\n            this.addChild(this._steakLabel);\r\n\r\n            //added CheeseLabel to the scene\r\n            this._sauceLabel = new objects.Label(\r\n                \"Sauce: \" + sauceValue + \"/4\",\r\n                \"25px Consolas\",\r\n                \"#000000\",\r\n                490, 70, false\r\n            );\r\n            this.addChild(this._sauceLabel);\r\n\r\n            //added EggLabel to the scene\r\n            this._friesLabel = new objects.Label(\r\n                \"Fries: \" + friesValue + \"/6\",\r\n                \"25px Consolas\",\r\n                \"#000000\",\r\n                490, 40, false\r\n            );\r\n            this.addChild(this._friesLabel);\r\n\r\n            // added collision manager to the scene\r\n            this._collision = new managers.Collision(this._player);\r\n\r\n            // add this scene to the global stage container\r\n            stage.addChild(this);\r\n        }\r\n\r\n\r\n\r\n        // PLAY Scene updates here\r\n        public update(): void {\r\n            this._kitchenTwo.update();\r\n            this._player.update();\r\n\r\n            this._steak.update();\r\n            this._fries.update();\r\n            this._sauce.update();\r\n\r\n            this._peppers.forEach(pepper => {\r\n                pepper.update();\r\n                if(this._collision.check(pepper)){\r\n                 //   this.removeChild(pepper);\r\n                    this._liveValue--;\r\n                     this.checkLife(this._liveValue);\r\n                }         \r\n                        \r\n            });\r\n\r\n            if (this._collision.check(this._steak)) {\r\n                 this.removeChild(this._steak);\r\n               this._steak=new objects.Steak();\r\n               this.addChild(this._steak);\r\n            }\r\n\r\n            if (this._collision.check(this._fries)) {\r\n               this.removeChild(this._fries);\r\n               this._fries=new objects.Fries();\r\n               this.addChild(this._fries);\r\n\r\n            }\r\n            if (this._collision.check(this._sauce)) {\r\n               this.removeChild(this._sauce);\r\n               this._sauce=new objects.Sauce();\r\n               this.addChild(this._sauce);                \r\n            }\r\n            \r\n            \r\n\r\n            //Status Change\r\n            if (sauceValue >= 4) {\r\n                this._sauceLabel.color = \"GREEN\";\r\n            }\r\n\r\n            if (steakValue >= 3) {\r\n                this._steakLabel.color = \"GREEN\";\r\n            }\r\n\r\n            if (friesValue >= 6) {\r\n                this._friesLabel.color = \"GREEN\";\r\n            }\r\n\r\n            //Scene Change\r\n            if (sauceValue >= 4 && steakValue >= 3 && friesValue >= 6) {\r\n                // Switch to the Transition Scene\r\n              sauceValue*=100;\r\n               steakValue*=200;\r\n               friesValue*=50;\r\n               scoreLevelTwo = sauceValue+steakValue+friesValue;\r\n                 highScoreValue = scoreLevelOne + scoreLevelTwo;\r\n                scene = config.Scene.LEVEL2CHANGE;\r\n                changeScene();\r\n            }\r\n\r\n            this._updateScore();\r\n        }\r\n  private checkLife(value:number){\r\n            if (value<=0){\r\n                  sauceValue*=100;\r\n               steakValue*=200;\r\n               friesValue*=50;\r\n               scoreLevelTwo = sauceValue+steakValue+friesValue;\r\n                 highScoreValue = scoreLevelOne + scoreLevelTwo;\r\n                    // Switch to the Game Over Scene\r\n                    scene = config.Scene.END;\r\n                    changeScene();\r\n            }\r\n        }\r\n\r\n        //EVENT HANDLERS ++++++++++++++++++++\r\n\r\n    }\r\n}"],"sourceRoot":"/source/"}