{"version":3,"sources":["scenes/play.ts"],"names":[],"mappings":";;;;;AAAA,aAAa;AACb,IAAO,MAAM,CAkGZ;AAlGD,WAAO,MAAM,EAAC,CAAC;IACX;QAA0B,wBAAa;QAWnC,qCAAqC;QACrC;YACI,iBAAO,CAAC;QAEZ,CAAC;QAED,kBAAkB;QAElB;;;WAGG;QACK,2BAAY,GAApB;YACI,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,SAAS,GAAG,UAAU,CAAC;QACnD,CAAC;QAED,uCAAuC;QAEvC,eAAe;QACR,oBAAK,GAAZ;YACI,kBAAkB;YAClB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,UAAU,GAAG,CAAC,CAAC;YAEf,0BAA0B;YAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,EAAiB,CAAC;YAE1C,2BAA2B;YAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,CAAC,UAAU,EAAE,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAE3B,4BAA4B;YAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;YACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5B,4BAA4B;YAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;YACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5B,2BAA2B;YAC3B,GAAG,CAAA,CAAC,IAAI,KAAK,GAAU,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE,EAAE,CAAC;gBAC1D,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;gBAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YACtC,CAAC;YAED,+BAA+B;YAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,CAAC,KAAK,CAChC,SAAS,GAAG,UAAU,EACtB,eAAe,EACf,SAAS,EACT,EAAE,EAAE,EAAE,EAAE,KAAK,CAChB,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAIhC,uCAAuC;YACvC,IAAI,CAAC,UAAU,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEvD,+CAA+C;YAC/C,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC;QAID,0BAA0B;QACnB,qBAAM,GAAb;YAAA,iBAcC;YAbG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YAEtB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YAEtB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,KAAK;gBACtB,KAAK,CAAC,MAAM,EAAE,CAAC;gBACf,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEpC,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC;QAKL,WAAC;IAAD,CAhGA,AAgGC,CAhGyB,OAAO,CAAC,KAAK,GAgGtC;IAhGY,WAAI,OAgGhB,CAAA;AACL,CAAC,EAlGM,MAAM,KAAN,MAAM,QAkGZ","file":"scenes/play.js","sourcesContent":["// PLAY SCENE\r\nmodule scenes {\r\n    export class Play extends objects.Scene {\r\n        //PRIVATE INSTANCE VARIABLES ++++++++++++\r\n        private _ocean: objects.KitchenOne;\r\n        private _island: objects.Cheese;\r\n        private _clouds: objects.Bread[];\r\n        private _cloudCount:number;\r\n        private _player: objects.Player;\r\n        private _collision: managers.Collision;\r\n        private _livesLabel: objects.Label;\r\n        private _scoreLabel: objects.Label;\r\n        \r\n        // CONSTRUCTOR ++++++++++++++++++++++\r\n        constructor() {\r\n            super();\r\n           \r\n        }\r\n        \r\n        // PRIVATE METHODS\r\n        \r\n        /**\r\n         * @method _updateScore\r\n         * @return void\r\n         */\r\n        private _updateScore():void {\r\n            this._livesLabel.text = \"Lives: \" + livesValue;\r\n        }\r\n        \r\n        // PUBLIC METHODS +++++++++++++++++++++\r\n        \r\n        // Start Method\r\n        public start(): void {\r\n            // Set Cloud Count\r\n            this._cloudCount = 3;\r\n            livesValue = 5;\r\n            \r\n            // Instantiate Cloud array\r\n            this._clouds = new Array<objects.Bread>();\r\n                \r\n            // added ocean to the scene\r\n            this._ocean = new objects.KitchenOne();\r\n            this.addChild(this._ocean);\r\n\r\n            // added island to the scene\r\n            this._island = new objects.Cheese();\r\n            this.addChild(this._island);\r\n\r\n            // added player to the scene\r\n            this._player = new objects.Player();\r\n            this.addChild(this._player);\r\n            \r\n            //added clouds to the scene\r\n            for(var cloud:number = 0; cloud < this._cloudCount; cloud++) {\r\n                this._clouds[cloud] = new objects.Bread();\r\n               this.addChild(this._clouds[cloud]);\r\n            }\r\n            \r\n            //added LivesLabel to the scene\r\n            this._livesLabel = new objects.Label(\r\n                \"Lives: \" + livesValue,\r\n                \"40px Consolas\",\r\n                \"#ffff00\",\r\n                10, 10, false\r\n            );\r\n            this.addChild(this._livesLabel);\r\n            \r\n            \r\n            \r\n            // added collision manager to the scene\r\n            this._collision = new managers.Collision(this._player);\r\n            \r\n            // add this scene to the global stage container\r\n            stage.addChild(this);\r\n        }\r\n        \r\n        \r\n\r\n        // PLAY Scene updates here\r\n        public update(): void {\r\n            this._ocean.update();\r\n            this._island.update();\r\n           \r\n            this._player.update();\r\n           \r\n            this._clouds.forEach(cloud => {\r\n                cloud.update();\r\n                this._collision.check(cloud);\r\n            });\r\n            \r\n            this._collision.check(this._island);\r\n            \r\n            this._updateScore();\r\n        }\r\n        \r\n        \r\n        //EVENT HANDLERS ++++++++++++++++++++\r\n        \r\n    }\r\n}"],"sourceRoot":"/source/"}