{"version":3,"sources":["objects/player.ts"],"names":[],"mappings":"AAAA,mBAAmB;AACnB,qDAAqD;AACrD,oDAAoD;AACpD,wCAAwC;AACxC,uCAAuC;AACvC,wCAAwC;AACxC,wCAAwC;AACxC,2CAA2C;;;;;;AAE3C,uCAAuC;AACvC,gCAAgC;AAChC,iCAAiC;AACjC,8DAA8D;AAC9D,0BAA0B;AAC1B,+CAA+C;AAE/C,mDAAmD;AACnD,qDAAqD;AAErD,4CAA4C;AAC5C,6CAA6C;AAE7C,mDAAmD;AACnD,+CAA+C;AAC/C,qEAAqE;AACrE,6EAA6E;AAE7E,8BAA8B;AAE9B,kDAAkD;AAClD,8DAA8D;AAC9D,2CAA2C;AAC3C,0CAA0C;AAC1C,YAAY;AAEZ,6BAA6B;AAC7B,yCAAyC;AACzC,kCAAkC;AAClC,+CAA+C;AAC/C,6CAA6C;AAC7C,gBAAgB;AAEhB,iCAAiC;AACjC,8CAA8C;AAC9C,4CAA4C;AAC5C,gBAAgB;AAEhB,mCAAmC;AACnC,iDAAiD;AACjD,+CAA+C;AAC/C,gBAAgB;AAChB,YAAY;AAGZ,4BAA4B;AAC5B,kCAAkC;AAClC,qCAAqC;AACrC,mCAAmC;AACnC,mCAAmC;AACnC,YAAY;AACZ,QAAQ;AACR,IAAI;AAEJ,2FAA2F;AAC3F,IAAO,OAAO,CAkDb;AAlDD,WAAO,OAAO,EAAC,CAAC;IACZ,8CAA8C;IAC9C;QAA4B,0BAAe;QASvC;YACI,kBAAM,YAAY,EAAE,OAAO,CAAC,CAAC;YAE7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC;YACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC;YAEtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAE9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YACpC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;YAE7D,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;YAEb,mCAAmC;YACnC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjD,4BAA4B;YAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;QAC/B,CAAC;QAED,kBAAkB;QACV,6BAAY,GAApB;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;YAC9B,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;YAC/B,CAAC;QACL,CAAC;QAGD,gBAAgB;QACT,uBAAM,GAAb;YACI,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;YACtB,IAAI,CAAC,CAAC,GAAC,KAAK,CAAC,MAAM,CAAC;YACpB,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC;QACL,aAAC;IAAD,CA/CA,AA+CC,CA/C2B,QAAQ,CAAC,MAAM,GA+C1C;IA/CY,cAAM,SA+ClB,CAAA;AACL,CAAC,EAlDM,OAAO,KAAP,OAAO,QAkDb","file":"objects/player.js","sourcesContent":["// module objects {\r\n//     // PLAYER CLASS ++++++++++++++++++++++++++++++\r\n//     export class Player extends createjs.Bitmap {\r\n//         // PRIVATE INSTANCE VARIABLES\r\n//         private _leftBounds: number;\r\n//         private _rightBounds: number;\r\n//         protected _topBounds: number;\r\n//         protected _bottomBounds: number;\r\n\r\n//         // PUBLIC INSTANCE VARIABLES\r\n//         public width: number;\r\n//         public height: number;\r\n//         public engineSound: createjs.AbstractSoundInstance;\r\n//         constructor() {\r\n//             super(assets.getResult(\"chef\"));\r\n\r\n//             this.width = this.getBounds().width;\r\n//             this.height = this.getBounds().height;\r\n\r\n//             this.regX = this.width * 0.5;\r\n//             this.regY = this.height * 0.5;\r\n\r\n//             this._leftBounds = this.width * 0.5;\r\n//             this._topBounds = this.regX+120;\r\n//             this._bottomBounds = config.Screen.HEIGHT - this.regX;\r\n//             this._rightBounds = config.Screen.WIDTH - (this.width * 0.75);\r\n\r\n//             //this.y = 360;\r\n\r\n//             // assign and play the engine sound\r\n//             this.engineSound = createjs.Sound.play(\"funk\");\r\n//             // Loop engine sound forever\r\n//             this.engineSound.loop = -1;\r\n//         }\r\n\r\n//         // PRIVATE METHODS\r\n//         private _checkBounds(): void {\r\n//             // Left Bound Check\r\n//             if (this.x < this._leftBounds) {\r\n//                 this.x = this._leftBounds;\r\n//             }\r\n\r\n//             // Top Bound Check\r\n//             if (this.y < this._topBounds) {\r\n//                 this.y = this._topBounds;\r\n//             }\r\n\r\n//             //Bottom bound Check\r\n//             if (this.y > this._bottomBounds) {\r\n//                 this.y = this._bottomBounds;\r\n//             }\r\n//         }\r\n\r\n\r\n//         // PUBLIC METHODS\r\n//         public update(): void {\r\n//             this.y = stage.mouseY;\r\n//             this.x=stage.mouseX;\r\n//             this._checkBounds();\r\n//         }\r\n//     }\r\n// }\r\n\r\n//++++++++++++++++++++++++++++++++++++++/////++++++++++++++++++++++////++++++++++++++++++++\r\nmodule objects {\r\n    // PLAYER CLASS ++++++++++++++++++++++++++++++\r\n    export class Player extends createjs.Sprite {\r\n        // PRIVATE INSTANCE VARIABLES\r\n        private _leftBounds: number;\r\n        private _rightBounds: number;\r\n\r\n        // PUBLIC INSTANCE VARIABLES\r\n        public width: number;\r\n        public height: number;\r\n        public engineSound: createjs.AbstractSoundInstance;\r\n        constructor() {\r\n            super(textureAtlas, \"plane\");\r\n\r\n            this.width = this.getBounds().width;\r\n            this.height = this.getBounds().height;\r\n\r\n            this.regX = this.width * 0.5;\r\n            this.regY = this.height * 0.5;\r\n\r\n            this._leftBounds = this.width * 0.5;\r\n            this._rightBounds = config.Screen.WIDTH - (this.width * 0.5);\r\n\r\n            this.y = 430;\r\n            \r\n            // assign and play the engine sound\r\n            this.engineSound = createjs.Sound.play(\"engine\");\r\n            // Loop engine sound forever\r\n            this.engineSound.loop = -1;\r\n        }\r\n\r\n        // PRIVATE METHODS\r\n        private _checkBounds(): void {\r\n            if (this.x < this._leftBounds) {\r\n                this.x = this._leftBounds;\r\n            }\r\n\r\n            if (this.x > this._rightBounds) {\r\n                this.x = this._rightBounds;\r\n            }\r\n        }\r\n\r\n\r\n        //PUBLIC METHODS\r\n        public update(): void {\r\n            this.y = stage.mouseY;\r\n            this.x=stage.mouseX;\r\n            this._checkBounds();\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}